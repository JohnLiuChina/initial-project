server:
  port: 8010
spring:
  application:
    name: order-service
  cloud:
    nacos:
      server-addr: 192.168.89.1:8848
      discovery:
        username: nacos
        password: nacos
        namespace: public
        # 实例临时性配置，false为永久实例，即使状态不正常也不会被踢出注册中心
        ephemeral: false
    # springcloud整合sentinel dashboard（需要调用一次才会注册到sentinel中）
    sentinel:
      transport:
        dashboard: 127.0.0.1:8888
    alibaba:
      seata:
        # 分布式事务 事务分组配置（必配）对应config.txt: service.vgroupMapping.my_test_tx_group=default
        tx-service-group: my_test_tx_group
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://127.0.0.1:3306/test?serverTimezone=UTC
    username: root
    password: mzllsy
stock-service:
  ribbon:
    # 由nacos中配置的权重/或者yml中的weight进行负载均衡
    NFLoadBalancerRuleClassName: com.springcloud.ribbon.config.CustomRule
ribbon:
  eager-load:
    # 开启饿汉模式，默认为懒汉
    enabled: true
    clients: stock-service
logging:
  # 此处直接配置level: debug为全局日志级别
  level:
    # 此处将包路径作为Key为局部日志级别配置
    com.springcloud.order.feign: debug
# feign日志局部配置 NONE BASIC HEADERS FULL
feign:
  client:
    config:
      stock-service:
        loggerLevel: BASIC
        # 网络连接超时时间
        connectTimeout: 2000
        # 处理超时时间
        readTimeout: 2000
        # 指定远程服务的拦截器
        #requestInterceptors[0]:
        #  com.springcloud.order.interceptor.FeignInterceptor
  sentinel:
    enabled: true
# seata 配置
seata:
  # 注册中心配置
  registry:
    type: nacos
    nacos:
      server-addr: ${spring.cloud.nacos.server-addr}
      application: seata-server
      username: ${spring.cloud.nacos.discovery.username}
      password: ${spring.cloud.nacos.discovery.password}
      group: SEATA_GROUP
  # 配置中心配置
  config:
    type: nacos
    nacos:
      server-addr: ${spring.cloud.nacos.server-addr}
      username: ${spring.cloud.nacos.discovery.username}
      password: ${spring.cloud.nacos.discovery.password}
      group: ${seata.registry.nacos.group}